{"ast":null,"code":"var _jsxFileName = \"/workspaces/FSDL52/week05/myreact.app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Question from './components/Question';\nimport CareerMatch from './components/CareerMatch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({}); // { questionId: selectedOptionIndex }\n  const [result, setResult] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n\n  // Fetch questions from the backend API\n  useEffect(() => {\n    fetch('http://localhost:5000/api/questions').then(res => res.json()).then(data => setQuestions(data)).catch(err => console.error('Error fetching questions:', err));\n  }, []);\n  const handleAnswerChange = (questionId, optionIndex) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: optionIndex\n    }));\n  };\n  const handleSubmit = () => {\n    const answerArray = Object.keys(answers).map(key => ({\n      questionId: parseInt(key, 10),\n      selectedOption: answers[key]\n    }));\n    fetch('http://localhost:5000/api/analyze', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        answers: answerArray\n      })\n    }).then(res => res.json()).then(data => {\n      setResult(data);\n      setSubmitted(true);\n    }).catch(err => console.error('Error analyzing answers:', err));\n  };\n  const handleRestart = () => {\n    setAnswers({});\n    setResult(null);\n    setSubmitted(false);\n  };\n  const totalQuestions = questions.length;\n  const answeredCount = Object.keys(answers).length;\n  const progressPercentage = totalQuestions > 0 ? Math.round(answeredCount / totalQuestions * 100) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-dark bg-primary mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand\",\n        href: \"/\",\n        children: \"Career Analysis App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: submitted ? /*#__PURE__*/_jsxDEV(CareerMatch, {\n          result: result,\n          onRestart: handleRestart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [totalQuestions > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: [\"Progress: \", answeredCount, \" of \", totalQuestions, \" answered\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                role: \"progressbar\",\n                style: {\n                  width: `${progressPercentage}%`\n                },\n                \"aria-valuenow\": progressPercentage,\n                \"aria-valuemin\": \"0\",\n                \"aria-valuemax\": \"100\",\n                children: [progressPercentage, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), questions.map(question => /*#__PURE__*/_jsxDEV(Question, {\n            question: question,\n            onAnswerChange: handleAnswerChange,\n            selectedOption: answers[question.id]\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleSubmit,\n            children: \"Submit Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YbczIsEIEoBqtnqVyCTo5+Uybuc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Question","CareerMatch","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","answers","setAnswers","result","setResult","submitted","setSubmitted","fetch","then","res","json","data","catch","err","console","error","handleAnswerChange","questionId","optionIndex","prev","handleSubmit","answerArray","Object","keys","map","key","parseInt","selectedOption","method","headers","body","JSON","stringify","handleRestart","totalQuestions","length","answeredCount","progressPercentage","Math","round","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","onRestart","role","style","width","question","onAnswerChange","id","onClick","_c","$RefreshReg$"],"sources":["/workspaces/FSDL52/week05/myreact.app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Question from './components/Question';\nimport CareerMatch from './components/CareerMatch';\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({}); // { questionId: selectedOptionIndex }\n  const [result, setResult] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n\n  // Fetch questions from the backend API\n  useEffect(() => {\n    fetch('http://localhost:5000/api/questions')\n      .then(res => res.json())\n      .then(data => setQuestions(data))\n      .catch(err => console.error('Error fetching questions:', err));\n  }, []);\n\n  const handleAnswerChange = (questionId, optionIndex) => {\n    setAnswers(prev => ({ ...prev, [questionId]: optionIndex }));\n  };\n\n  const handleSubmit = () => {\n    const answerArray = Object.keys(answers).map(key => ({\n      questionId: parseInt(key, 10),\n      selectedOption: answers[key]\n    }));\n\n    fetch('http://localhost:5000/api/analyze', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ answers: answerArray })\n    })\n      .then(res => res.json())\n      .then(data => {\n        setResult(data);\n        setSubmitted(true);\n      })\n      .catch(err => console.error('Error analyzing answers:', err));\n  };\n\n  const handleRestart = () => {\n    setAnswers({});\n    setResult(null);\n    setSubmitted(false);\n  };\n\n  const totalQuestions = questions.length;\n  const answeredCount = Object.keys(answers).length;\n  const progressPercentage = totalQuestions > 0 ? Math.round((answeredCount / totalQuestions) * 100) : 0;\n\n  return (\n    <div className=\"container my-4\">\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary mb-4\">\n        <a className=\"navbar-brand\" href=\"/\">Career Analysis App</a>\n      </nav>\n      <div className=\"card shadow-sm\">\n        <div className=\"card-body\">\n          {submitted ? (\n            <CareerMatch result={result} onRestart={handleRestart} />\n          ) : (\n            <div>\n              {totalQuestions > 0 && (\n                <div className=\"mb-4\">\n                  <label className=\"form-label\">\n                    Progress: {answeredCount} of {totalQuestions} answered\n                  </label>\n                  <div className=\"progress\">\n                    <div\n                      className=\"progress-bar\"\n                      role=\"progressbar\"\n                      style={{ width: `${progressPercentage}%` }}\n                      aria-valuenow={progressPercentage}\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                    >\n                      {progressPercentage}%\n                    </div>\n                  </div>\n                </div>\n              )}\n              {questions.map(question => (\n                <Question\n                  key={question.id}\n                  question={question}\n                  onAnswerChange={handleAnswerChange}\n                  selectedOption={answers[question.id]}\n                />\n              ))}\n              <button className=\"btn btn-primary\" onClick={handleSubmit}>\n                Submit Answers\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}